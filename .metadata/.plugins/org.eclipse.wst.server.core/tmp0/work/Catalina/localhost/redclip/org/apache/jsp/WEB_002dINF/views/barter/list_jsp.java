/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.87
 * Generated at: 2024-08-01 06:37:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.barter;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1721298713299L));
    _jspx_dependants.put("jar:file:/D:/seongha/team_project/REDCLIP/redclip/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>상품 목록</title>\r\n");
      out.write("<link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js\"></script>\r\n");
      out.write("<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("    .btn-container {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("    }\r\n");
      out.write("    .bd-placeholder-img {\r\n");
      out.write("        font-size: 1.125rem;\r\n");
      out.write("        text-anchor: middle;\r\n");
      out.write("        -webkit-user-select: none;\r\n");
      out.write("        -moz-user-select: none;\r\n");
      out.write("        user-select: none;\r\n");
      out.write("    }\r\n");
      out.write("    .col {\r\n");
      out.write("        margin-bottom: 30px;\r\n");
      out.write("    }\r\n");
      out.write("    .sub-title {\r\n");
      out.write("        margin-top: 60px;\r\n");
      out.write("        font-size: 22px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("    }\r\n");
      out.write("    .d-flex { \r\n");
      out.write("        width: 1100px; \r\n");
      out.write("        margin-bottom: 40px;\r\n");
      out.write("    }\r\n");
      out.write("    .form-control { \r\n");
      out.write("        margin-right: 4px;\r\n");
      out.write("    }\r\n");
      out.write("    .filter-select {\r\n");
      out.write("        margin: 0 5px;\r\n");
      out.write("    }\r\n");
      out.write("    .breadcrumb {\r\n");
      out.write("        background-color: transparent;\r\n");
      out.write("        padding: 0;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .card-title {\r\n");
      out.write("    	height:48px;\r\n");
      out.write("    	overflow: hidden;\r\n");
      out.write("	  text-overflow: ellipsis;\r\n");
      out.write("	  display: -webkit-box;\r\n");
      out.write("	  -webkit-line-clamp: 2;\r\n");
      out.write("	  -webkit-box-orient: vertical;\r\n");
      out.write("    }\r\n");
      out.write("    .card-text {\r\n");
      out.write("        font-size: 14px;\r\n");
      out.write("    }\r\n");
      out.write("   \r\n");
      out.write("    \r\n");
      out.write("    .card-text.date-text {\r\n");
      out.write("    	color:#636363;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    .card-container {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        flex-wrap: wrap;\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        padding: 0;\r\n");
      out.write("        margin-bottom: 100px;\r\n");
      out.write("    }\r\n");
      out.write("    .filter-info-container {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("    }\r\n");
      out.write("    .card {\r\n");
      out.write("        width: 260px; \r\n");
      out.write("        height: 450px;\r\n");
      out.write("        margin-bottom: 12px;\r\n");
      out.write("        margin-right: 10px;\r\n");
      out.write("        box-sizing: border-box;\r\n");
      out.write("    }\r\n");
      out.write("    .card-img-top {\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        height: 240px;\r\n");
      out.write("        object-fit: cover;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/header.jsp", out, false);
      out.write("\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <!-- breadcrumb -->\r\n");
      out.write("        <section>\r\n");
      out.write("            <nav aria-label=\"breadcrumb\">\r\n");
      out.write("                <ol class=\"breadcrumb\">\r\n");
      out.write("                    <img src=\"/redclip/resources/img/house-door-fill.svg\" style=\"margin-right: 4px\" />\r\n");
      out.write("                    <li class=\"breadcrumb-item\"><a href=\"/redclip\">홈</a></li>\r\n");
      out.write("                    <li class=\"breadcrumb-item\"><a href=\"/redclip/barters\">상품목록</a></li>\r\n");
      out.write("                </ol>\r\n");
      out.write("            </nav>\r\n");
      out.write("            ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/search.jsp", out, false);
      out.write("\r\n");
      out.write("            <div id=\"filter-info\" class=\"clr-fix\">\r\n");
      out.write("                <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n");
      out.write("                    <div class=\"d-flex\">\r\n");
      out.write("                        <select class=\"form-control\" id=\"categoryNo\" name=\"categoryNo\" style=\"max-width: 150px;\" required>\r\n");
      out.write("				           <option value=\"0\">카테고리</option>\r\n");
      out.write("				           <option value=\"1\">디지털기기</option>\r\n");
      out.write("				           <option value=\"2\">가구/인테리어</option>\r\n");
      out.write("				           <option value=\"3\">유아용품</option>\r\n");
      out.write("				           <option value=\"4\">여성의류</option>\r\n");
      out.write("				           <option value=\"5\">여성잡화</option>\r\n");
      out.write("				           <option value=\"6\">남성의류</option>\r\n");
      out.write("				           <option value=\"7\">남성잡화</option>\r\n");
      out.write("				           <option value=\"8\">생활가전</option>\r\n");
      out.write("				           <option value=\"9\">주방용품</option>\r\n");
      out.write("				           <option value=\"10\">스포츠/레저</option>\r\n");
      out.write("				           <option value=\"11\">게임/음반</option>\r\n");
      out.write("				           <option value=\"12\">뷰티/미용</option>\r\n");
      out.write("				           <option value=\"13\">식물</option>\r\n");
      out.write("				           <option value=\"14\">가공식품</option>\r\n");
      out.write("				           <option value=\"15\">건강기능식품</option>\r\n");
      out.write("				           <option value=\"16\">반려동물용품</option>\r\n");
      out.write("				           <option value=\"17\">티켓/교환권</option>\r\n");
      out.write("				           <option value=\"18\">도서</option>\r\n");
      out.write("				        </select>\r\n");
      out.write("                        <select class=\"form-control\" id=\"si\">\r\n");
      out.write("                            <option selected value=\"0\">시</option>\r\n");
      out.write("                            <option value=\"1\">서울특별시</option>\r\n");
      out.write("                            <option value=\"2\">인천광역시</option>\r\n");
      out.write("                        </select>\r\n");
      out.write("                        <select class=\"form-control\" id=\"gu\" disabled>\r\n");
      out.write("                            <option selected value=\"0\">구</option>\r\n");
      out.write("                        </select>\r\n");
      out.write("                        <select class=\"form-control\" id=\"dong\" disabled>\r\n");
      out.write("                            <option selected value=\"0\">동</option>\r\n");
      out.write("                        </select>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"container\" style=\"max-width: 1200px;\">\r\n");
      out.write("	            <!-- <h5 style=\"font-weight: bold\">추천 물물교환</h5> -->\r\n");
      out.write("	            <!-- 로그인 후 상태일 경우만 보여지는 글쓰기 버튼 -->\r\n");
      out.write("	            ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("	            <br>\r\n");
      out.write("	            <div class=\"card-container\">\r\n");
      out.write("                </div>\r\n");
      out.write("	        </div>\r\n");
      out.write("            </section>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("	\r\n");
      out.write("    <script>\r\n");
      out.write("    $(document).ready(function() {\r\n");
      out.write("    	if ('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sessionScope.keyword }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' != null) {\r\n");
      out.write("    		$('.search-input').val('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sessionScope.keyword }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');\r\n");
      out.write("    		\r\n");
      out.write("    		$.ajax({\r\n");
      out.write("    			url : '/redclip/removeKeyword',\r\n");
      out.write("    			type : 'get',\r\n");
      out.write("    			success : result => {\r\n");
      out.write("    				\r\n");
      out.write("    				if (result != 1) {\r\n");
      out.write("    					location.href = '/redclip';\r\n");
      out.write("    				} \r\n");
      out.write("    			}\r\n");
      out.write("    		});\r\n");
      out.write("    	}\r\n");
      out.write("    	\r\n");
      out.write("        const $categorySelect = $('#categoryNo');\r\n");
      out.write("        const $siSelect = $('#si');\r\n");
      out.write("        const $guSelect = $('#gu');\r\n");
      out.write("        const $dongSelect = $('#dong');\r\n");
      out.write("        const $cardContainer = $('.card-container');\r\n");
      out.write("\r\n");
      out.write("        // 시 선택 시 구 목록 로드\r\n");
      out.write("        $siSelect.change(() => {\r\n");
      out.write("            const siValue = $siSelect.val();\r\n");
      out.write("            if (siValue !== \"\") {\r\n");
      out.write("                $.ajax({\r\n");
      out.write("                    url: '/redclip/member/guSelect',\r\n");
      out.write("                    type: 'GET',\r\n");
      out.write("                    data: { si: siValue },\r\n");
      out.write("                    success: response => {\r\n");
      out.write("                        $guSelect.empty().append('<option value=\"\">구 선택</option>');\r\n");
      out.write("                        response.forEach(a => {\r\n");
      out.write("                            $guSelect.append('<option value=' + a.townCode + '>' + a.townName + '</option>');\r\n");
      out.write("                        });\r\n");
      out.write("                        $guSelect.prop('disabled', false); // 구 셀렉트 박스 활성화\r\n");
      out.write("                        $dongSelect.prop('disabled', true).empty().append('<option value=\"\">동 선택</option>'); // 동 셀렉트 박스 비활성화 및 초기화\r\n");
      out.write("                    },\r\n");
      out.write("                    error: function() {\r\n");
      out.write("                        alert('오류가 발생했습니다.');\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // 구 선택 시 동 목록 로드\r\n");
      out.write("        $guSelect.change(() => {\r\n");
      out.write("            const guValue = $guSelect.val();\r\n");
      out.write("            if (guValue !== \"\") {\r\n");
      out.write("                $.ajax({\r\n");
      out.write("                    url: '/redclip/member/dongSelect',\r\n");
      out.write("                    type: 'GET',\r\n");
      out.write("                    data: { gu: guValue },\r\n");
      out.write("                    success: response => {\r\n");
      out.write("                        $dongSelect.empty().append('<option value=\"\">동 선택</option>');\r\n");
      out.write("                        response.forEach(a => {\r\n");
      out.write("                            $dongSelect.append('<option value=' + a.villageCode + '>' + a.villageName + '</option>');\r\n");
      out.write("                        });\r\n");
      out.write("                        $dongSelect.prop('disabled', false); // 동 셀렉트 박스 활성화\r\n");
      out.write("                    },\r\n");
      out.write("                    error: function() {\r\n");
      out.write("                        alert('오류가 발생했습니다.');\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        $('.search-button').click(function() {\r\n");
      out.write("        	\r\n");
      out.write("            loadFilteredBarters();\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        $('.search-input').on('keypress', function (e) {\r\n");
      out.write("            if (e.key === 'Enter') {\r\n");
      out.write("            	loadFilteredBarters();\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // 필터링된 바터 목록 로드\r\n");
      out.write("        function loadFilteredBarters() {\r\n");
      out.write("        	\r\n");
      out.write("        	/* let keyword = $('.search-input').val(); */\r\n");
      out.write("        	let keyword = $('.search-input').val();\r\n");
      out.write("            const categoryNo = $categorySelect.val();\r\n");
      out.write("            const si = $siSelect.val();\r\n");
      out.write("            const gu = $guSelect.val();\r\n");
      out.write("            const dong = $dongSelect.val();\r\n");
      out.write("            const $cardContainer = $('.card-container');\r\n");
      out.write("            $cardContainer.empty();\r\n");
      out.write("            console.log(dong);\r\n");
      out.write("            let code;\r\n");
      out.write("\r\n");
      out.write("            if (dong != 0) {\r\n");
      out.write("                code = dong;\r\n");
      out.write("            } else if (gu != 0) {\r\n");
      out.write("                code = gu;\r\n");
      out.write("            } else if (si) {\r\n");
      out.write("                code = si;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            let urlData = '/redclip/barters/' + categoryNo + '/' + code;\r\n");
      out.write("            \r\n");
      out.write("            if (keyword != '') {\r\n");
      out.write("            	\r\n");
      out.write("            	urlData += '/' + keyword;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: urlData,\r\n");
      out.write("                type: 'GET',\r\n");
      out.write("                success: function(response) {\r\n");
      out.write("                    // 필터링된 결과를 기존 카드 목록에 추가\r\n");
      out.write("                    console.log('카테고리번호:', categoryNo);\r\n");
      out.write("                    console.log('지역코드번호:', code);\r\n");
      out.write("                    console.log('검색어 :', keyword);\r\n");
      out.write("                    response.forEach(barter => {\r\n");
      out.write("                    	/* console.log(barter); */\r\n");
      out.write("                        const card =\r\n");
      out.write("                        	`<div class=\"card\">\r\n");
      out.write("                        	 <img src=\"${barter.barterFileList[0].barterFileName}\" class=\"card-img-top\" alt=\"${barter.barterName}\">\r\n");
      out.write("                             <div class=\"card-body\">\r\n");
      out.write("                             <h5 class=\"card-title\">${barter.barterName}</h5>\r\n");
      out.write("                             <p class=\"card-text region-text\">${barter.region.cityName} ${barter.region.townName} ${barter.region.villageName}</p>\r\n");
      out.write("                             <p class=\"card-text date-text\">${barter.barterDate}</p>\r\n");
      out.write("                             <a href=\"/redclip/barters/${barter.barterNo}\" class=\"btn btn-primary\">상세보기</a>\r\n");
      out.write("                             </div>\r\n");
      out.write("                             </div>`;\r\n");
      out.write("                             \r\n");
      out.write("                        $cardContainer.append(card); // 기존 카드 목록에 추가\r\n");
      out.write("                    });\r\n");
      out.write("\r\n");
      out.write("                    // 결과가 없을 때 처리 (예: 아무 항목도 찾지 못했을 때)\r\n");
      out.write("                    if (response.length === 0) {\r\n");
      out.write("                        $cardContainer.html('<p class=\"text-center\">검색 결과가 없습니다.</p>');\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                error: function(xhr, status, error) {\r\n");
      out.write("                    alert('항목을 불러오는데 실패했습니다. 에러 메시지: ' + xhr.status + ' ' + error);\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // 카테고리 및 위치 변경 시 필터링된 목록 로드\r\n");
      out.write("        $('#categoryNo, #si, #gu, #dong').change(function() {\r\n");
      out.write("            //$cardContainer.empty(); // 기존 카드 목록 비우기\r\n");
      out.write("            loadFilteredBarters(); // 필터링된 목록 다시 로드\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // 페이지 로드시 처음 필터링된 목록 로드\r\n");
      out.write("        loadFilteredBarters();\r\n");
      out.write("    });\r\n");
      out.write("    </script>\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/barter/list.jsp(147,13) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty sessionScope.loginUser }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("	                <a class=\"btn btn-secondary\" style=\"float: right;\" href=\"barters/registration\">글쓰기</a> <br>\r\n");
          out.write("	            ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }
}
