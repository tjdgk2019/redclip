/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.87
 * Generated at: 2024-08-01 05:09:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.chatting;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class view_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1721298713299L));
    _jspx_dependants.put("jar:file:/D:/seongha/team_project/REDCLIP/redclip/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Document</title>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/head.jsp", out, false);
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("	.clr-fix::after {\r\n");
      out.write("            clear: both;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            content: '';\r\n");
      out.write("            display: block;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("       /* 헤더 마진 삭제 */\r\n");
      out.write("       #hd .navbar {\r\n");
      out.write("       	margin-bottom:0 !important;\r\n");
      out.write("       }\r\n");
      out.write("\r\n");
      out.write("        body {\r\n");
      out.write("            overflow-x: hidden;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("      #content {\r\n");
      out.write("      	ul {\r\n");
      out.write("            list-style: none;\r\n");
      out.write("        }\r\n");
      out.write("        p {\r\n");
      out.write("        	margin-bottom : 0;\r\n");
      out.write("        }\r\n");
      out.write("      }\r\n");
      out.write("        .clr-fix::after {\r\n");
      out.write("            clear: both;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            content: '';\r\n");
      out.write("            display: block;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("        #content {\r\n");
      out.write("            min-width: 960px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #page1 {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            height: calc(100vh - 71px);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .sidebar {\r\n");
      out.write("            width: 400px; /* 왼쪽 목록의 고정 너비 */\r\n");
      out.write("            border-right: 1.5px solid #33333325;\r\n");
      out.write("            color: #303030;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .sidebar ul {\r\n");
      out.write("            list-style-type: none;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .sidebar ul li {\r\n");
      out.write("            margin-bottom: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .sidebar-tab {\r\n");
      out.write("            height: 50px;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            text-align: right;\r\n");
      out.write("            border-bottom: 1px solid #33333325;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .chat-room:first-child {\r\n");
      out.write("            border-top: 1px solid #33333325;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .chat-room {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            height: 150px;\r\n");
      out.write("            border-bottom: 1px solid #33333325;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .chat-area {\r\n");
      out.write("            flex: 1; /* 오른쪽 채팅 부분이 줄어들도록 설정 */\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-direction: column;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .chat-header {\r\n");
      out.write("            background-color: #f3f3f5;\r\n");
      out.write("            color: #303030;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            height: 80px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .chat-header-left {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("        }\r\n");
      out.write("         .chat-header-right {\r\n");
      out.write("        	display:flex;\r\n");
      out.write("        	align-items: center;\r\n");
      out.write("        	\r\n");
      out.write("        	> button  {\r\n");
      out.write("        		padding: 5px;\r\n");
      out.write("			    line-height: 1;\r\n");
      out.write("			    height: 30px;\r\n");
      out.write("			    font-size: 14px;\r\n");
      out.write("    			font-weight: bold;\r\n");
      out.write("        	}\r\n");
      out.write("        }\r\n");
      out.write("       \r\n");
      out.write("\r\n");
      out.write("        #profile-name {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            margin-left: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #nickname {\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            font-size: 20px;\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("        }\r\n");
      out.write("        #level {\r\n");
      out.write("            margin-left: 1px;\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            vertical-align: text-bottom;\r\n");
      out.write("            border: 2px solid orange;\r\n");
      out.write("            color: orange;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            padding: 0 2px;\r\n");
      out.write("            font-size: 12px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        p {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .search-container {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            margin-left:5px;\r\n");
      out.write("        }\r\n");
      out.write("        .search-container input[type='text'] {\r\n");
      out.write("            padding: 5px;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            border: 1px solid #ddd;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            width: 150px;\r\n");
      out.write("            margin-right: 10px;\r\n");
      out.write("            height: 40px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .profile-img {\r\n");
      out.write("            width: 50px;\r\n");
      out.write("            height: 50px;\r\n");
      out.write("            border-radius: 50px;\r\n");
      out.write("            background-color: #898989;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            align-content: center;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .chat-messages {\r\n");
      out.write("            flex: 1;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            overflow-y: auto;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-direction: column;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .chat-input {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            background-color: #f1f1f1;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        .message {\r\n");
      out.write("            margin: 10px 0;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            max-width: 60%;\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            font-size: 18px;\r\n");
      out.write("            \r\n");
      out.write("            p {\r\n");
      out.write("            	word-break: break-all;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .chat-div {\r\n");
      out.write("        	font-size: 13px;\r\n");
      out.write("		    color: gray;\r\n");
      out.write("        }\r\n");
      out.write("        .send-div {\r\n");
      out.write("        	text-align:right;\r\n");
      out.write("        	\r\n");
      out.write("        }\r\n");
      out.write("       \r\n");
      out.write("\r\n");
      out.write("        .send {\r\n");
      out.write("            align-self: flex-end;\r\n");
      out.write("            background-color: #11aa00;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            margin-left : 5px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .receive-div {\r\n");
      out.write("        \r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .receive {\r\n");
      out.write("            align-self: flex-start;\r\n");
      out.write("            background-color: #ffffff;\r\n");
      out.write("            color: #000;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("            margin-right: 5px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .chat-input input {\r\n");
      out.write("            flex: 1;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            margin-right: 10px;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .chat-input button {\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            background-color: #007bff;\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .chat-input button:hover {\r\n");
      out.write("            background-color: #0056b3;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .list-img {\r\n");
      out.write("            margin-right: 20px;\r\n");
      out.write("            width: 70px;\r\n");
      out.write("            height: 70px;\r\n");
      out.write("            border-radius: 50px;\r\n");
      out.write("            background-color: #898989;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            align-content: center;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .chat-list {\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            list-style-type: none;\r\n");
      out.write("            max-height: calc(100vh - 121px);\r\n");
      out.write("            overflow-y: auto;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .chat-item {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("            margin-bottom: 10px;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            height: 120px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .chat-item.active {\r\n");
      out.write("            background-color: #33333325;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .chat-item:hover {\r\n");
      out.write("            background-color: #33333325;\r\n");
      out.write("        }\r\n");
      out.write("        .chat-item img {\r\n");
      out.write("            width: 50px;\r\n");
      out.write("            height: 50px;\r\n");
      out.write("            border-radius: 50%;\r\n");
      out.write("            margin-right: 10px;\r\n");
      out.write("        }\r\n");
      out.write("        .chat-details {\r\n");
      out.write("            flex-grow: 1;\r\n");
      out.write("                width: 319px;\r\n");
      out.write("            \r\n");
      out.write("            .badge {\r\n");
      out.write("            	background-color: #007300;\r\n");
      out.write("            	max-width:300px;\r\n");
      out.write("            	color:#fff;\r\n");
      out.write("            	\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        .nickname {\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            display: inline;\r\n");
      out.write("            margin-right: 10px;\r\n");
      out.write("        }\r\n");
      out.write("        .latest-message {\r\n");
      out.write("            color: #666;\r\n");
      out.write("            margin: 5px 0 0;\r\n");
      out.write("            white-space: nowrap;\r\n");
      out.write("        overflow: hidden;\r\n");
      out.write("        text-overflow: ellipsis;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .small-detail {\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            color: #999;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .chat-link {\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("		    display: block;\r\n");
      out.write("		    white-space: nowrap;\r\n");
      out.write("		    overflow: hidden;\r\n");
      out.write("		    text-overflow: ellipsis;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .chat-link:hover {\r\n");
      out.write("            text-decoration: underline;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .tab-badge:not(.active):hover {\r\n");
      out.write("            background-color: #33333325;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .tab-badge {\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            border: 1px solid #33333325;\r\n");
      out.write("            border-radius: 20px;\r\n");
      out.write("            padding: 5px 7px;\r\n");
      out.write("            margin-left: 3px;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .tab-badge.active {\r\n");
      out.write("            background-color: #007300;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            border: 1px solid #007300;\r\n");
      out.write("        }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	\r\n");
      out.write("	<div id=\"hd\">\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/header.jsp", out, false);
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"content clr-fix\" id=\"content\">\r\n");
      out.write("		<section class=\"page\" id=\"page1\">\r\n");
      out.write("                <div class=\"sidebar\">\r\n");
      out.write("                    <!-- 카테고리, 선택 시 배경 색 바뀌는 자바스크립트 추가 예정-->\r\n");
      out.write("                    <div class=\"sidebar-tab\">\r\n");
      out.write("                        <span class=\"tab-badge active\" id=\"tab-all\">전체</span>\r\n");
      out.write("                        <span class=\"tab-badge\" id=\"tab-barter\">게시글</span>\r\n");
      out.write("                        <span class=\"tab-badge\" id=\"tab-reply\">답글</span>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <script>\r\n");
      out.write("                        $(document).ready(function () {\r\n");
      out.write("                            $('.tab-badge').on('click', function () {\r\n");
      out.write("                                $('.tab-badge').removeClass('active');\r\n");
      out.write("                                $(this).addClass('active');\r\n");
      out.write("                                \r\n");
      out.write("                                switch ($(this).attr('id')) {\r\n");
      out.write("                                case 'tab-all' : selectList(); break;\r\n");
      out.write("                                case 'tab-barter' : selectList('barter'); break;\r\n");
      out.write("                                case 'tab-reply' : selectList('reply'); break;\r\n");
      out.write("                                };\r\n");
      out.write("                            });\r\n");
      out.write("                        });\r\n");
      out.write("                    </script>\r\n");
      out.write("                    <!-- 채팅방 목록 -->\r\n");
      out.write("                    <div class=\"chat-room-list\">\r\n");
      out.write("                        <ul class=\"chat-list\">\r\n");
      out.write("                            \r\n");
      out.write("                        </ul>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <script>\r\n");
      out.write("                	\r\n");
      out.write("                    $(document).ready(() => {\r\n");
      out.write("                    	\r\n");
      out.write("                    	\r\n");
      out.write("                    	\r\n");
      out.write("                    	\r\n");
      out.write("                         \r\n");
      out.write("                    });\r\n");
      out.write("                    \r\n");
      out.write("                   /*  window.onload = function() {\r\n");
      out.write("                    	\r\n");
      out.write("                    };\r\n");
      out.write("                    */\r\n");
      out.write("                    \r\n");
      out.write("                    \r\n");
      out.write("                    \r\n");
      out.write("                </script>\r\n");
      out.write("                <!-- 오른쪽 영역 -->\r\n");
      out.write("                <div class=\"chat-area\" style=\"display:none;\">\r\n");
      out.write("                    <!-- 채팅 상대 정보 -->\r\n");
      out.write("                    <div class=\"chat-header\">\r\n");
      out.write("                        <div class=\"chat-header-left\">\r\n");
      out.write("                            <img class=\"profile-img\" src=\"\">\r\n");
      out.write("                            <div id=\"profile-name\">\r\n");
      out.write("                                <p id=\"nickname\">User2</p>\r\n");
      out.write("                                <!-- <p id=\"level\">CLIP</p> -->\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"chat-header-right\">\r\n");
      out.write("                        	\r\n");
      out.write("	                        <div class=\"search-container\">\r\n");
      out.write("	                            <input type=\"text\" placeholder=\"채팅 검색\" />\r\n");
      out.write("	                        </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <!-- 채팅 내역 -->\r\n");
      out.write("                    <div class=\"chat-messages\">\r\n");
      out.write("                    	\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <!-- 채팅 입력창 -->\r\n");
      out.write("                    <div class=\"chat-input\">\r\n");
      out.write("                        <input id=\"chat-input\" type=\"text\" placeholder=\"올바른 채팅 예절을 지켜주세요!\" />\r\n");
      out.write("                        <button onclick=\"submitMessage()\" id=\"sendbtn\">Send</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </section>\r\n");
      out.write("			<script>\r\n");
      out.write("			   		\r\n");
      out.write("			   		\r\n");
      out.write("            $(document).ready( function() {\r\n");
      out.write("            	selectList();\r\n");
      out.write("            	openedChat();\r\n");
      out.write("            	\r\n");
      out.write("            	 \r\n");
      out.write("            	\r\n");
      out.write("            	if( '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sessionScope.RoomNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' != '' ) {\r\n");
      out.write("            		const id= '#' + '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sessionScope.RoomNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("            		$(id).trigger('onclick');\r\n");
      out.write("            		console.log(id + '로 트리거 동작');\r\n");
      out.write("            	}\r\n");
      out.write("            	\r\n");
      out.write("            	const originChatInput = $('.chat-input').html();\r\n");
      out.write("            	\r\n");
      out.write("            	$(document).on('click', '.chat-item', function () {\r\n");
      out.write("                	if(socket) {\r\n");
      out.write("                		socket.close();\r\n");
      out.write("                	};\r\n");
      out.write("                	\r\n");
      out.write("                    $('.chat-item').removeClass('active');\r\n");
      out.write("                    $(this).addClass('active');\r\n");
      out.write("					\r\n");
      out.write("                    const roomNo = $(this).attr(\"id\");\r\n");
      out.write("                    connect(roomNo);\r\n");
      out.write("                    \r\n");
      out.write("                    let onclick = 'submitMessage()';\r\n");
      out.write("                    $('#sendbtn').attr(\"onclick\", onclick);\r\n");
      out.write("                    \r\n");
      out.write("                    let messageList = '';\r\n");
      out.write("                    let chatProfile = '';\r\n");
      out.write("                    \r\n");
      out.write("                    \r\n");
      out.write("                    // 선택한 채팅방 채팅내역 select\r\n");
      out.write("                    $.ajax({\r\n");
      out.write("                    	\r\n");
      out.write("                    	url : 'view/' + roomNo,\r\n");
      out.write("                    	type : 'get',\r\n");
      out.write("                    	success : result => {\r\n");
      out.write("                    		console.log(result);\r\n");
      out.write("                    		\r\n");
      out.write("                    		// 채팅 상대 (채팅창 헤더)\r\n");
      out.write("                    		let profile;\r\n");
      out.write("                    		let nickname;\r\n");
      out.write("                    		\r\n");
      out.write("                    		if (result.barterWriter === '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.userId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("') {\r\n");
      out.write("                    			profile = result.replyProfil;\r\n");
      out.write("                    			nickname = result.replyNickname;\r\n");
      out.write("                    			$('.chat-header-right button').remove();\r\n");
      out.write("                    			$('.chat-header-right').prepend('<button class=\"btn btn-primary\">거래 완료 요청</button>');\r\n");
      out.write("                    		} else {\r\n");
      out.write("                    			profile = result.barterProfile;\r\n");
      out.write("                    			nickname = result.barterNickname;\r\n");
      out.write("                    		}\r\n");
      out.write("                    		\r\n");
      out.write("                    		chatProfile += '<img class=\"profile-img\" src=\"/redclip/' + profile + '\">'\r\n");
      out.write("                    					+ '<div id=\"profile-name\"><p id=\"nickname\">'; \r\n");
      out.write("                    		chatProfile += (nickname != null)\r\n");
      out.write("                    						? nickname + '</p></div>'\r\n");
      out.write("                    						: '(탈퇴한 회원)</p></div>';\r\n");
      out.write("                            \r\n");
      out.write("                    		// 채팅 내역\r\n");
      out.write("                    		(result.chatMessageList).map(( message ) => {\r\n");
      out.write("                    			let type = (message.senderId === '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.userId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("') ? 'send' : 'receive';\r\n");
      out.write("                    			messageList += `<div class=\"${type}-div chat-div\">`\r\n");
      out.write("                    			\r\n");
      out.write("                    			let dateData = `<span class=\"${type}-date\">${message.chatDate}</span>`;\r\n");
      out.write("                    			let messageData = `<div class=\"message ${type}\"><p>${message.chatMessage}</p></div>`;\r\n");
      out.write("                    			\r\n");
      out.write("                    			messageList += (message.senderId === '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.userId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("') \r\n");
      out.write("                    							? dateData + messageData\r\n");
      out.write("                    							: messageData + dateData;\r\n");
      out.write("                    			messageList +=  `</div>`;\r\n");
      out.write("                    			\r\n");
      out.write("                    			\r\n");
      out.write("                    		});\r\n");
      out.write("                    		\r\n");
      out.write("                    		\r\n");
      out.write("                    		if (result.barterName == null) {\r\n");
      out.write("                    			$('.chat-input').html(`대화가 종료된 채팅방입니다.`);\r\n");
      out.write("                    		} else {\r\n");
      out.write("                    			$('.chat-input').html(originChatInput);\r\n");
      out.write("                    		} \r\n");
      out.write("                    		\r\n");
      out.write("                    		$('.chat-header-left').html(chatProfile);\r\n");
      out.write("                    		$('.chat-messages').html(messageList);\r\n");
      out.write("                    		\r\n");
      out.write("                    		scrollToBottom();\r\n");
      out.write("\r\n");
      out.write("                    	}\r\n");
      out.write("                    });\r\n");
      out.write("                    $('.chat-area').attr(\"id\", roomNo);\r\n");
      out.write("                    $('.chat-area').show();\r\n");
      out.write("\r\n");
      out.write("                }); \r\n");
      out.write("            	\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            	\r\n");
      out.write("            const submitMessage = () => {\r\n");
      out.write("            	\r\n");
      out.write("            	const $roomNo = $('.chat-area').attr(\"id\")\r\n");
      out.write("                const message = $('#chat-input').val();\r\n");
      out.write("                \r\n");
      out.write("                \r\n");
      out.write("                let today = new Date();\r\n");
      out.write("                \r\n");
      out.write("                let hours = today.getHours().toString().padStart(2, '0');\r\n");
      out.write("                let minutes = today.getMinutes().toString().padStart(2, '0');\r\n");
      out.write("                \r\n");
      out.write("\r\n");
      out.write("                if (message.trim() !== '') {\r\n");
      out.write("                    const insValue = `<div class=\"send-div chat-div\">\r\n");
      out.write("                    				  <span class=\"send-date\">${hours}:${minutes}</span>\r\n");
      out.write("                    				  <div class=\"message send\"><p>${ message }</p></div></div>`;\r\n");
      out.write("\r\n");
      out.write("                    const chatMessage = {\r\n");
      out.write("                    	roomNo : $roomNo,\r\n");
      out.write("                    	senderId : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sessionScope.loginUser.userId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("',\r\n");
      out.write("                    	message : message\r\n");
      out.write("                    };\r\n");
      out.write("                    \r\n");
      out.write("            	\r\n");
      out.write("                    if (socket) {\r\n");
      out.write("                    	sendMessage = $roomNo + ', ' + '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sessionScope.loginUser.userId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' + ', ' + message;\r\n");
      out.write("                    	socket.send(sendMessage);\r\n");
      out.write("                    } \r\n");
      out.write("                    \r\n");
      out.write("                    $('.chat-messages').append(insValue);\r\n");
      out.write("\r\n");
      out.write("                    $('#chat-input').val('');\r\n");
      out.write("\r\n");
      out.write("                    scrollToBottom();\r\n");
      out.write("                    $('#chat-input').focus();\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                selectList();\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("                const scrollToBottom = () => {\r\n");
      out.write("                    const chatContainer = $('.chat-messages');\r\n");
      out.write("                    chatContainer.scrollTop(chatContainer[0].scrollHeight);\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                () => {\r\n");
      out.write("                    scrollToBottom();\r\n");
      out.write("                    \r\n");
      out.write("                    \r\n");
      out.write("                };\r\n");
      out.write("                \r\n");
      out.write("                $(document).on('keypress', '#chat-input', function(e) {\r\n");
      out.write("                     if (e.which === 13) {\r\n");
      out.write("                         submitMessage();\r\n");
      out.write("                     }\r\n");
      out.write("                 });\r\n");
      out.write("               \r\n");
      out.write("                const selectList = (condition) => {\r\n");
      out.write("                	console.log(condition);\r\n");
      out.write("                	$.ajax({\r\n");
      out.write("                		\r\n");
      out.write("                		url : 'list',\r\n");
      out.write("                		type: 'get',\r\n");
      out.write("                		data : {\r\n");
      out.write("                			userId : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sessionScope.loginUser.userId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\r\n");
      out.write("                		},\r\n");
      out.write("                		success : result => {\r\n");
      out.write("                			console.log(result);\r\n");
      out.write("                			let chatItems = '';\r\n");
      out.write("                			\r\n");
      out.write("                			if (condition) {\r\n");
      out.write("                				let type = condition;\r\n");
      out.write("                				\r\n");
      out.write("                				result = result.filter((room) => room[`${type}Writer`] =='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.userId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');\r\n");
      out.write("                			};\r\n");
      out.write("                			/* \r\n");
      out.write("                			switch (condition) {\r\n");
      out.write("                				case 'barter' :  result = result.filter((room) => room.barterWriter == '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.userId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'); break;\r\n");
      out.write("                				case 'reply' : result = result.filter ((room) => room.replyWriter == '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.userId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'); break;\r\n");
      out.write("                			}\r\n");
      out.write("                			 */\r\n");
      out.write("                			\r\n");
      out.write("                			result.map((room) => {\r\n");
      out.write("                				\r\n");
      out.write("                				let profile;\r\n");
      out.write("                				let nickname;\r\n");
      out.write("                				let villageName;\r\n");
      out.write("                				\r\n");
      out.write("                				if (room.barterWriter === \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sessionScope.loginUser.userId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\") {\r\n");
      out.write("                					profile = room.replyProfil;\r\n");
      out.write("                					nickname = room.replyNickname;\r\n");
      out.write("                					villageName = room.replyVillageName;\r\n");
      out.write("                				} else {\r\n");
      out.write("                					profile = room.barterProfil;\r\n");
      out.write("                					nickname = room.barterNickname;\r\n");
      out.write("                					villageName = room.barterVillageName;\r\n");
      out.write("                				}\r\n");
      out.write("                				\r\n");
      out.write("                				chatItems += `<li class=\"chat-item\" id=\"${room.roomNo}\">\r\n");
      out.write("                							  <img class=\"list-img\" src=\"/redclip/${profile}\">\r\n");
      out.write("                                    	      <div class=\"chat-details\">\r\n");
      out.write("                                              <h5><span class=\"badge text-bg-secondary\">`;\r\n");
      out.write("                                              \r\n");
      out.write("                                chatItems += (room.barterName != null)\r\n");
      out.write("                                			 ? `<a class=\"chat-link\" href=\"/redclip/barters/${room.barterNo}\">${room.barterName}</a>`\r\n");
      out.write("                                		     : '삭제된 게시글';\r\n");
      out.write("                                              \r\n");
      out.write("                                              \r\n");
      out.write("                                chatItems += `</span>\r\n");
      out.write("                                              </h5><p class=\"nickname\">${nickname}</p>\r\n");
      out.write("                                              <span class=\"small-detail\">${villageName}`;\r\n");
      out.write("                                        \r\n");
      out.write("                                chatItems +=  ( room.chatDate != null || room.chatMessage != null)\r\n");
      out.write("                                			 ? ` · ${room.chatDate}</span><p class=\"latest-message\">${room.chatMessage}</p></div></li>`\r\n");
      out.write("                                			 : `</span></div></li>`;\r\n");
      out.write("                                  \r\n");
      out.write("                				\r\n");
      out.write("                			});\r\n");
      out.write("                			$('.chat-list').html(chatItems);\r\n");
      out.write("                		}\r\n");
      out.write("                		\r\n");
      out.write("                	});\r\n");
      out.write("                	\r\n");
      out.write("                	\r\n");
      out.write("                	/* \r\n");
      out.write("                	<li class=\"chat-item\" id=\"11\">\r\n");
      out.write("                    <!-- <img src=\"profile1.jpg\" alt=\"Profile Picture 1\"> -->\r\n");
      out.write("                    <div class=\"list-img\">프사</div>\r\n");
      out.write("                    <div class=\"chat-details\">\r\n");
      out.write("                        <h5>\r\n");
      out.write("                            <span class=\"badge text-bg-secondary\"\r\n");
      out.write("                                ><a class=\"chat-link\" href=\"#\">교환 게시글 제목</a></span\r\n");
      out.write("                            >\r\n");
      out.write("                        </h5>\r\n");
      out.write("                        <p class=\"nickname\">User 1</p>\r\n");
      out.write("                        <span class=\"small-detail\">OO동 · 4시간 전</span>\r\n");
      out.write("                        <p class=\"latest-message\" style=\"color: #303030; font-weight: bold\">\r\n");
      out.write("                            Hello! How are you?\r\n");
      out.write("                        </p>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </li> */\r\n");
      out.write("                };\r\n");
      out.write("                \r\n");
      out.write("                const openedChat = () => {\r\n");
      out.write("                	\r\n");
      out.write("                };\r\n");
      out.write("                \r\n");
      out.write("            </script>\r\n");
      out.write("\r\n");
      out.write("            <section></section>\r\n");
      out.write("	</div>\r\n");
      out.write("	");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/chatting/view.jsp(692,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ not empty sessionScope.RoomNo}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("   		<script>\r\n");
          out.write("   			const id= '#' + '");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sessionScope.RoomNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("';\r\n");
          out.write("   			console.log(id);\r\n");
          out.write("   			//$(id).addClass('active');\r\n");
          out.write("   			$(id).trigger('onclick');\r\n");
          out.write("   		</script>\r\n");
          out.write("   		");
          if (_jspx_meth_c_005fremove_005f0(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("   ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fremove_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:remove
    org.apache.taglibs.standard.tag.common.core.RemoveTag _jspx_th_c_005fremove_005f0 = (org.apache.taglibs.standard.tag.common.core.RemoveTag) _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody.get(org.apache.taglibs.standard.tag.common.core.RemoveTag.class);
    boolean _jspx_th_c_005fremove_005f0_reused = false;
    try {
      _jspx_th_c_005fremove_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fremove_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /WEB-INF/views/chatting/view.jsp(699,5) name = var type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fremove_005f0.setVar("RoomNo");
      // /WEB-INF/views/chatting/view.jsp(699,5) name = scope type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fremove_005f0.setScope("session");
      int _jspx_eval_c_005fremove_005f0 = _jspx_th_c_005fremove_005f0.doStartTag();
      if (_jspx_th_c_005fremove_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody.reuse(_jspx_th_c_005fremove_005f0);
      _jspx_th_c_005fremove_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fremove_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fremove_005f0_reused);
    }
    return false;
  }
}
