/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.87
 * Generated at: 2024-07-31 05:46:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class search_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n");
      out.write("<title>검색창</title>\r\n");
      out.write("<link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("    .search-container {\r\n");
      out.write("        position: relative;\r\n");
      out.write("        width: 400px;\r\n");
      out.write("        margin: 0 auto;\r\n");
      out.write("        margin-top: 80px;\r\n");
      out.write("        margin-bottom: 80px;\r\n");
      out.write("        display: flex;\r\n");
      out.write("    }\r\n");
      out.write("    .search-input {\r\n");
      out.write("        flex: 1;\r\n");
      out.write("        padding: 8px;\r\n");
      out.write("        border: 1px solid #ddd;\r\n");
      out.write("        border-radius: 5px 0 0 5px;\r\n");
      out.write("        outline: none;\r\n");
      out.write("    }\r\n");
      out.write("    .search-input:focus {\r\n");
      out.write("        border-color: rgb(238, 60, 60);\r\n");
      out.write("    }\r\n");
      out.write("    .search-button {\r\n");
      out.write("        padding: 8px 16px;\r\n");
      out.write("        border: 1px solid #ccc;\r\n");
      out.write("        border-left: 0;\r\n");
      out.write("        background-color: rgb(238, 60, 60);\r\n");
      out.write("        color: white;\r\n");
      out.write("        border-radius: 0 5px 5px 0;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("    .search-results {\r\n");
      out.write("        position: absolute;\r\n");
      out.write("        top: 40px;\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        background: white;\r\n");
      out.write("        border: 1px solid #ccc;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        display: none;\r\n");
      out.write("        z-index: 1000;\r\n");
      out.write("    }\r\n");
      out.write("    .search-results.active {\r\n");
      out.write("        display: block;\r\n");
      out.write("    }\r\n");
      out.write("    .search-results .tab {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        border-bottom: 1px solid #ccc;\r\n");
      out.write("    }\r\n");
      out.write("    .search-results .tab button {\r\n");
      out.write("        flex: 1;\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        border: none;\r\n");
      out.write("        background: none;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("    .search-results .tab button.active {\r\n");
      out.write("        border-bottom: 2px solid #858585;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("    }\r\n");
      out.write("    .search-results .content {\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("    }\r\n");
      out.write("    .search-results .content .recent-searches,\r\n");
      out.write("    .search-results .content .popular-searches {\r\n");
      out.write("        display: none;\r\n");
      out.write("    }\r\n");
      out.write("    .search-results .content .recent-searches.active,\r\n");
      out.write("    .search-results .content .popular-searches.active {\r\n");
      out.write("        display: block;\r\n");
      out.write("    }\r\n");
      out.write("    .search-results .content ul {\r\n");
      out.write("        list-style: none;\r\n");
      out.write("        padding: 0;\r\n");
      out.write("        margin: 0;\r\n");
      out.write("    }\r\n");
      out.write("    .search-results .content li {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        justify-content: space-between;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("        padding: 5px 0;\r\n");
      out.write("    }\r\n");
      out.write("    .search-results .content li span {\r\n");
      out.write("        flex: 1;\r\n");
      out.write("        overflow: hidden;\r\n");
      out.write("        white-space: nowrap;\r\n");
      out.write("        text-overflow: ellipsis;\r\n");
      out.write("    }\r\n");
      out.write("    .search-results .content li .delete-btn {\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("        color: #aaa;\r\n");
      out.write("        text-align: right;\r\n");
      out.write("        margin-right: 5px;\r\n");
      out.write("    }\r\n");
      out.write("    .search-results .actions {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        justify-content: space-between;\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("    }\r\n");
      out.write("    .search-results .actions button {\r\n");
      out.write("        border: none;\r\n");
      out.write("        background: none;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("        color: #aaa;\r\n");
      out.write("    }\r\n");
      out.write("    .search-results .actions .clear-recent {\r\n");
      out.write("        visibility: visible;\r\n");
      out.write("    }\r\n");
      out.write("    .search-results .actions .clear-recent.hidden {\r\n");
      out.write("        visibility: hidden;\r\n");
      out.write("    }\r\n");
      out.write("    #no-recent-searches {\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        padding: 10px 0;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"search-container\">\r\n");
      out.write("        <input type=\"text\" class=\"search-input\" placeholder=\"키워드를 입력해주세요.\" />\r\n");
      out.write("        <button class=\"search-button\" >검색</button>\r\n");
      out.write("        <div class=\"search-results\">\r\n");
      out.write("            <div class=\"tab\">\r\n");
      out.write("                <button class=\"active\" data-tab=\"recent\">최근검색어</button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"content\">\r\n");
      out.write("                <div class=\"recent-searches active\">\r\n");
      out.write("                    <ul id=\"recent-searches-list\">\r\n");
      out.write("                        <li id=\"no-recent-searches\">최근 검색어가 없습니다.</li>\r\n");
      out.write("                    </ul>\r\n");
      out.write("                </div>\r\n");
      out.write("           </div>\r\n");
      out.write("           <div class=\"actions\">\r\n");
      out.write("               <button id=\"clear-recent-searches\" class=\"clear-recent\">최근 검색어 전체 삭제</button>\r\n");
      out.write("               <button id=\"close-search-results\">닫기</button>\r\n");
      out.write("           </div>\r\n");
      out.write("       </div>\r\n");
      out.write("   </div>\r\n");
      out.write("<script>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("    const recentSearches = [];\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    $(document).ready(function () {\r\n");
      out.write("        $('.search-input').on('focus', function () {\r\n");
      out.write("            $('.search-results').addClass('active');\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        $('.tab button').on('click', function () {\r\n");
      out.write("            $('.tab button').removeClass('active');\r\n");
      out.write("            $(this).addClass('active');\r\n");
      out.write("            const tab = $(this).data('tab');\r\n");
      out.write("            if (tab === 'recent') {\r\n");
      out.write("                $('.recent-searches').addClass('active');\r\n");
      out.write("                $('#clear-recent-searches').removeClass('hidden');\r\n");
      out.write("            } else {\r\n");
      out.write("                $('.recent-searches').removeClass('active');\r\n");
      out.write("                $('#clear-recent-searches').addClass('hidden');\r\n");
      out.write("                fetchPopularSearches();\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        function addSearchTerm() {\r\n");
      out.write("            const searchTerm = $('.search-input').val();\r\n");
      out.write("            console.log(\"입력한 단어: \", searchTerm);\r\n");
      out.write("            if (searchTerm) {\r\n");
      out.write("                recentSearches.push(searchTerm);\r\n");
      out.write("                updateRecentSearches();\r\n");
      out.write("                \r\n");
      out.write("               \r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        $('.search-input').on('keypress', function (e) {\r\n");
      out.write("            if (e.key === 'Enter') {\r\n");
      out.write("\r\n");
      out.write("                addSearchTerm();\r\n");
      out.write("                $('.search-results').removeClass('active');\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        $('.search-button').on('click', function () {\r\n");
      out.write("\r\n");
      out.write("            addSearchTerm();\r\n");
      out.write("            $('.search-results').removeClass('active');\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        $(document).on('click', '.delete-btn', function () {\r\n");
      out.write("            const index = $(this).data('index');\r\n");
      out.write("            recentSearches.splice(index, 1);\r\n");
      out.write("            updateRecentSearches();\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        $('#clear-recent-searches').on('click', function () {\r\n");
      out.write("            recentSearches.length = 0;\r\n");
      out.write("            updateRecentSearches();\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        $('#close-search-results').on('click', function () {\r\n");
      out.write("            $('.search-results').removeClass('active');\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        function updateRecentSearches() {\r\n");
      out.write("        	console.log(recentSearches);\r\n");
      out.write("        \r\n");
      out.write("            const recentSearchesList = $('#recent-searches-list');\r\n");
      out.write("            recentSearchesList.empty();\r\n");
      out.write("            if (recentSearches.length === 0) {\r\n");
      out.write("                recentSearchesList.append('<li id=\"no-recent-searches\">최근 검색어가 없습니다.</li>');\r\n");
      out.write("            } else {\r\n");
      out.write("                recentSearches.forEach((search, index) => {\r\n");
      out.write("                	console.log(index);\r\n");
      out.write("                    recentSearchesList.append(\r\n");
      out.write("                        '<li><span>'+search+'</span><span class=\"delete-btn\" data-index=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${index}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">삭제</span></li>'\r\n");
      out.write("                    );\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            if (recentSearches.length > 0) {\r\n");
      out.write("\r\n");
      out.write("                const lastSearchTerm = recentSearches[recentSearches.length - 1];\r\n");
      out.write("                $('.search-input').val(lastSearchTerm);\r\n");
      out.write("                console.log(\"검색창에 표시된 단어: \", lastSearchTerm);\r\n");
      out.write("            } else {\r\n");
      out.write("                $('.search-input').val('');\r\n");
      out.write("\r\n");
      out.write("            } \r\n");
      out.write("        };\r\n");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
