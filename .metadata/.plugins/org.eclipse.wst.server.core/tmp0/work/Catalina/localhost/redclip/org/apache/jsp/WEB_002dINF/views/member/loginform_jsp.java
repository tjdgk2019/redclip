/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.87
 * Generated at: 2024-08-01 06:14:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class loginform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1721298713299L));
    _jspx_dependants.put("jar:file:/D:/seongha/team_project/REDCLIP/redclip/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<!-- jQuery -->\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("<!-- Bootstrap JS, Popper.js -->\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\"></script>\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<!-- Bootstrap core CSS -->\r\n");
      out.write("<link href=\"resources/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"resources/css/signin.css\" rel=\"stylesheet\">\r\n");
      out.write("	<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("	<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("	<link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100..900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write(" font-family: \"Noto Sans KR\", sans-serif !important;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("  .bd-placeholder-img {\r\n");
      out.write("    font-size: 1.125rem;\r\n");
      out.write("    text-anchor: middle;\r\n");
      out.write("    -webkit-user-select: none;\r\n");
      out.write("    -moz-user-select: none;\r\n");
      out.write("    -ms-user-select: none;\r\n");
      out.write("    user-select: none;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  @media (min-width: 768px) {\r\n");
      out.write("    .bd-placeholder-img-lg {\r\n");
      out.write("      font-size: 3.5rem;\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .btn-custom {\r\n");
      out.write("    position: relative;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    padding: 10px 20px;\r\n");
      out.write("    font-size: 18px;\r\n");
      out.write("    border: none;\r\n");
      out.write("    border-radius: 0.25rem;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    margin-bottom: 10px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: background-color 0.3s ease, box-shadow 0.3s ease;\r\n");
      out.write("    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .kakao-button {\r\n");
      out.write("    background-color: #FEE500;\r\n");
      out.write("    color: #3C1E1E;\r\n");
      out.write("    margin-top: 10px; /* 상단 여백 추가 */\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .kakao-button:hover {\r\n");
      out.write("    background-color: #E5CC00;\r\n");
      out.write("    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .naver-button {\r\n");
      out.write("    background-color: #03C75A;\r\n");
      out.write("    color: #FFFFFF;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .naver-button:hover {\r\n");
      out.write("    background-color: #02B14F;\r\n");
      out.write("    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .icon {\r\n");
      out.write("    margin-right: 10px;\r\n");
      out.write("    width: 24px; /* 이미지 크기를 조정 */\r\n");
      out.write("    height: 24px;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .btn-text {\r\n");
      out.write("    flex: 1;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("  }\r\n");
      out.write("  .link-container {\r\n");
      out.write("    margin-top: 10px;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    gap: 10px;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .link-container a {\r\n");
      out.write("    color: #333;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .link-container a:hover {\r\n");
      out.write("    color:blue\r\n");
      out.write("  }\r\n");
      out.write("  .input-group{\r\n");
      out.write("   margin-bottom :10px;\r\n");
      out.write("  }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"text-center\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("<form class=\"form-signin\" action=\"member/login\" method=\"post\">\r\n");
      out.write("  <h1 class=\"h3 mb-3 font-weight-normal\">로그인</h1>\r\n");
      out.write("  <label for=\"inputEmail\" class=\"sr-only\">아이디</label>\r\n");
      out.write("  <input type=\"text\" id=\"userId\" name=\"userId\" class=\"form-control\" placeholder=\"ID입력\" required autofocus>\r\n");
      out.write("  <label for=\"inputPassword\" class=\"sr-only\">패스워드</label>\r\n");
      out.write("  <input type=\"password\" id=\"userPwd\" name=\"userPwd\" class=\"form-control\" placeholder=\"PW입력\" required>\r\n");
      out.write("  <div class=\"checkbox mb-3\">\r\n");
      out.write("    <label>\r\n");
      out.write("         <input type=\"checkbox\" id=\"remember-me\" name=\"remember-me\" value=\"on\">로그인 유지하기\r\n");
      out.write("    </label>\r\n");
      out.write("  </div>\r\n");
      out.write("  <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">로그인</button>\r\n");
      out.write("\r\n");
      out.write("  <button class=\"btn btn-custom kakao-button\" type=\"button\" id=\"kakaoLogin\" hidden>\r\n");
      out.write("    <img src=\"\" alt=\"카카오 로그인\" class=\"icon\">\r\n");
      out.write("    <span class=\"btn-text\">카카오 로그인</span>\r\n");
      out.write("  </button>\r\n");
      out.write("  	");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    $(() => {\r\n");
      out.write("        $('#kakaoLogin').click(() => {\r\n");
      out.write("            location.href = 'https://kauth.kakao.com/oauth/authorize?' +\r\n");
      out.write("                'client_id=dd2c51ceb08c2d3fd9f505935aa18931' +\r\n");
      out.write("                '&redirect_uri=http://localhost/redclip/member/oauth' +\r\n");
      out.write("                '&response_type=code' +\r\n");
      out.write("                '&scope=profile_nickname,profile_image';\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("  <button class=\"btn btn-custom naver-button\" type=\"button\" hidden>\r\n");
      out.write("    <img src=\"\" alt=\"네이버 로그인\" class=\"icon\">\r\n");
      out.write("    <span class=\"btn-text\">네이버 로그인</span>\r\n");
      out.write("  </button>\r\n");
      out.write("\r\n");
      out.write("  <div class=\"link-container\">\r\n");
      out.write("    <a href=\"#\" data-toggle=\"modal\" data-target=\"#findIdModal\">아이디 찾기</a>\r\n");
      out.write("    <span>|</span>\r\n");
      out.write("    <a href=\"#\" data-toggle=\"modal\" data-target=\"#findPwModal\">비밀번호 찾기</a>\r\n");
      out.write("    <span>|</span>\r\n");
      out.write("    <a href=\"/redclip/joinform\">회원가입</a>\r\n");
      out.write("  </div>\r\n");
      out.write("</form>\r\n");
      out.write("<!-- 아이디찾기 모달 시작 -->\r\n");
      out.write("  <div class=\"modal fade\" id=\"findIdModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"findIdModal\" aria-hidden=\"true\">\r\n");
      out.write("      <div class=\"modal-dialog modal-md\" role=\"document\">\r\n");
      out.write("          <div class=\"modal-content\">\r\n");
      out.write("              \r\n");
      out.write("              <div class=\"modal-header\">\r\n");
      out.write("                  <h5 class=\"modal-title\" id=\"emailModalLabel\">아이디 찾기</h5>\r\n");
      out.write("                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("                      <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("                  </button>\r\n");
      out.write("              </div>\r\n");
      out.write("              \r\n");
      out.write("              <div class=\"modal-body\">\r\n");
      out.write("                  <div class=\"form-group\">\r\n");
      out.write("                      <div class=\"input-group\">\r\n");
      out.write("                          <input type=\"text\" class=\"form-control\" placeholder=\"이름 입력\" id=\"inputName\" name=\"a\">\r\n");
      out.write("                      </div>\r\n");
      out.write("                      <div class=\"input-group\">\r\n");
      out.write("                      <input type=\"text\" class=\"form-control\" placeholder=\"전화번호 입력\" id=\"inputTel\" name=\"authCode\">\r\n");
      out.write("                      </div>\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <button type=\"button\" class=\"btn btn-secondary \" id=\"searchId\">검색</button>\r\n");
      out.write("                  <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">닫기</button>\r\n");
      out.write("              </div>\r\n");
      out.write("          </div>\r\n");
      out.write("      </div>\r\n");
      out.write("  </div>\r\n");
      out.write(" <!--아이디찾기 결과창 모달 -->\r\n");
      out.write("<div class=\"modal fade\" id=\"resultModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"resultModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("    <div class=\"modal-dialog modal-md\" role=\"document\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("        \r\n");
      out.write("            <div class=\"modal-header\">\r\n");
      out.write("                <h5 class=\"modal-title\" id=\"resultModalLabel\">아이디 찾기 결과</h5>\r\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("                    <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("                </button>\r\n");
      out.write("                \r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body\" id=\"resultModalBody\">\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"findAfterLongin\">로그인</button>\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">닫기</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- 결과 모달 끝 -->\r\n");
      out.write("<!--  비밀번호 찾기 모달 -->\r\n");
      out.write("<div class=\"modal fade\" id=\"findPwModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"findPwModal\" aria-hidden=\"true\">\r\n");
      out.write("      <div class=\"modal-dialog modal-md\" role=\"document\">\r\n");
      out.write("          <div class=\"modal-content\">\r\n");
      out.write("              \r\n");
      out.write("              <div class=\"modal-header\">\r\n");
      out.write("                  <h5 class=\"modal-title\" id=\"emailModalLabel\">비밀번호 찾기</h5>\r\n");
      out.write("                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("                      <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("                  </button>\r\n");
      out.write("              </div>\r\n");
      out.write("              \r\n");
      out.write("              <div class=\"modal-body\">\r\n");
      out.write("                  <div class=\"form-group\">\r\n");
      out.write("                      <div class=\"input-group\">\r\n");
      out.write("                          <input type=\"text\" class=\"form-control\" placeholder=\"아이디입력\" id=\"inputId\" name=\"\">\r\n");
      out.write("                      </div>\r\n");
      out.write("                      <div class=\"input-group\">\r\n");
      out.write("                      <input type=\"text\" class=\"form-control\" placeholder=\"이메일입력\" id=\"inputEmail\" name=\"\">\r\n");
      out.write("                      </div>\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <button type=\"button\" class=\"btn btn-secondary \" id=\"searchPw\">검색</button>\r\n");
      out.write("                  <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">닫기</button>\r\n");
      out.write("              </div>\r\n");
      out.write("          </div>\r\n");
      out.write("      </div>\r\n");
      out.write("  </div>\r\n");
      out.write(" <!-- 비밀번호찾기 모달끝  -->\r\n");
      out.write(" <!-- 비밀번호찾기 결과창 모달 -->\r\n");
      out.write(" <div class=\"modal fade\" id=\"resultPwModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"resultPwModal\" aria-hidden=\"true\">\r\n");
      out.write("    <div class=\"modal-dialog modal-md\" role=\"document\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("        \r\n");
      out.write("            <div class=\"modal-header\">\r\n");
      out.write("                <h5 class=\"modal-title\" id=\"resultPwModalLabel\">비밀번호 찾기 결과</h5>\r\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("                    <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("                </button>\r\n");
      out.write("                \r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body\" id=\"resultPwModalBody\">\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"findAfterRecovery\" style=\"display:none\">새 비밀번호 변경</button>\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">닫기</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write(" <!-- 비밀번호찾기 결과창 모달 끝 -->\r\n");
      out.write(" <!-- 비밀번호 변경 모달창 시작 -->\r\n");
      out.write(" <div class=\"modal fade\" id=\"recoveryPwModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"recoveryPwModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("    <div class=\"modal-dialog modal-md\" role=\"document\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("        \r\n");
      out.write("            <div class=\"modal-header\">\r\n");
      out.write("                <h5 class=\"modal-title\" id=\"recoveryPwModalLabel\">비밀번호 변경</h5>\r\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("                    <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("                </button>\r\n");
      out.write("                \r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <div class=\"input-group\">\r\n");
      out.write("                        <input type=\"password\" class=\"form-control\" placeholder=\"새 비밀번호 입력\" id=\"newPassword\" name=\"newPassword\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"input-group\">\r\n");
      out.write("                        <input type=\"password\" class=\"form-control\" placeholder=\"새 비밀번호 확인\" id=\"confirmPassword\" name=\"confirmPassword\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-secondary\" id=\"updatePassword\">변경</button>\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">닫기</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write(" <!-- 비밀번호 변경 모달창 끝끝끝 -->\r\n");
      out.write("<script>\r\n");
      out.write("// 아이디 찾기 스크립트\r\n");
      out.write("$(() => {\r\n");
      out.write("    const $inputName = $('#inputName');\r\n");
      out.write("    const $inputTel = $('#inputTel');\r\n");
      out.write("    const $searchId = $('#searchId');\r\n");
      out.write("    const $resultModal = $('#resultModal');\r\n");
      out.write("    const $resultModalBody = $('#resultModalBody');\r\n");
      out.write("    const $findIdModal = $(\"#findIdModal\");\r\n");
      out.write("    const $findAfterLongin = $('#findAfterLongin');\r\n");
      out.write("    let resp = \"\";\r\n");
      out.write("    \r\n");
      out.write("    $searchId.click(() => {\r\n");
      out.write("        if ($inputName.val() !== null && $inputTel.val() !== null) {\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: 'member/searchId',\r\n");
      out.write("                type: 'GET',\r\n");
      out.write("                data: {\r\n");
      out.write("                    userName: $inputName.val(),\r\n");
      out.write("                    tel: $inputTel.val()\r\n");
      out.write("                },\r\n");
      out.write("                success: response => {\r\n");
      out.write("                    $resultModalBody.html(\"회원님의 ID는 \" + '<strong style=\"color: green;\">' + response + '</strong>' + \" 입니다.\"); \r\n");
      out.write("                    $findIdModal.modal('hide');\r\n");
      out.write("                    $resultModal.modal('show');\r\n");
      out.write("                    resp = response;\r\n");
      out.write("                },\r\n");
      out.write("                error: function () {\r\n");
      out.write("                    alert('오류임!!');\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    $findAfterLongin.click(() => {\r\n");
      out.write("        $('#userId').val(resp);\r\n");
      out.write("    });\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("// 비밀번호 찾기 스크립트\r\n");
      out.write("$(() => {\r\n");
      out.write("    const $inputId = $('#inputId');\r\n");
      out.write("    const $inputEmail = $('#inputEmail');\r\n");
      out.write("    const $searchPw = $('#searchPw');\r\n");
      out.write("    const $resultPwModal = $('#resultPwModal');\r\n");
      out.write("    const $resultPwModalBody = $('#resultPwModalBody');\r\n");
      out.write("    const $findPwModal = $(\"#findPwModal\");\r\n");
      out.write("    const $findAfterRecovery = $('#findAfterRecovery');\r\n");
      out.write("    const $recoveryPwModal = $('#recoveryPwModal');\r\n");
      out.write("    const $newPassword = $('#newPassword');\r\n");
      out.write("    const $confirmPassword = $('#confirmPassword');\r\n");
      out.write("    const pattern = /^[a-z0-9]{5,12}$/;\r\n");
      out.write("    \r\n");
      out.write("    $searchPw.click(() => {\r\n");
      out.write("        if ($inputId.val() !== null && $inputEmail.val() !== null) {\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: 'member/searchPw',\r\n");
      out.write("                type: 'GET',\r\n");
      out.write("                data: {\r\n");
      out.write("                    userId: $inputId.val(),\r\n");
      out.write("                    email: $inputEmail.val()\r\n");
      out.write("                },\r\n");
      out.write("                success: response => {\r\n");
      out.write("                    $resultPwModalBody.html(response);\r\n");
      out.write("                    $findPwModal.modal('hide');\r\n");
      out.write("                    $resultPwModal.modal('show');\r\n");
      out.write("                    if(response === \"해당회원의 정보가 존재합니다.\") {\r\n");
      out.write("                        $findAfterRecovery.show();\r\n");
      out.write("                    } else {\r\n");
      out.write("                        $findAfterRecovery.hide();\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                error: function () {\r\n");
      out.write("                    alert('오류임 똥멍청이야!!');\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    $findAfterRecovery.click(() => {\r\n");
      out.write("        $resultPwModal.modal('hide');\r\n");
      out.write("        $recoveryPwModal.modal('show');\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    $('#updatePassword').click(() => {\r\n");
      out.write("        if (pattern.test($newPassword.val()) && $newPassword.val() === $confirmPassword.val()) {\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: 'member/changePw',\r\n");
      out.write("                type: 'GET',\r\n");
      out.write("                data: { \r\n");
      out.write("                    userPwd: $confirmPassword.val(),\r\n");
      out.write("                    userId: $inputId.val()\r\n");
      out.write("                },\r\n");
      out.write("                success: response => {\r\n");
      out.write("                    location.href = 'loginform';\r\n");
      out.write("                    alert('비밀번호 변경에 성공하였습니다.');\r\n");
      out.write("                },\r\n");
      out.write("                error: function() {\r\n");
      out.write("                    alert('오류래용 메롱메롱');\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        } else if (!pattern.test($newPassword.val())) {\r\n");
      out.write("            alert('비밀번호는 영문,숫자를 사용하여 5~12자리로 입력해주세용');\r\n");
      out.write("        } else if ($newPassword.val() !== $confirmPassword.val()) {\r\n");
      out.write("            alert('비밀번호 확인이 일치하지 않습니다.');\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/member/loginform.jsp(133,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ not empty alertMsg }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("         <script>alert(\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ alertMsg }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\")</script>\r\n");
          out.write("         ");
          if (_jspx_meth_c_005fremove_005f0(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("   ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fremove_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:remove
    org.apache.taglibs.standard.tag.common.core.RemoveTag _jspx_th_c_005fremove_005f0 = (org.apache.taglibs.standard.tag.common.core.RemoveTag) _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody.get(org.apache.taglibs.standard.tag.common.core.RemoveTag.class);
    boolean _jspx_th_c_005fremove_005f0_reused = false;
    try {
      _jspx_th_c_005fremove_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fremove_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /WEB-INF/views/member/loginform.jsp(135,9) name = var type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fremove_005f0.setVar("alertMsg");
      // /WEB-INF/views/member/loginform.jsp(135,9) name = scope type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fremove_005f0.setScope("session");
      int _jspx_eval_c_005fremove_005f0 = _jspx_th_c_005fremove_005f0.doStartTag();
      if (_jspx_th_c_005fremove_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody.reuse(_jspx_th_c_005fremove_005f0);
      _jspx_th_c_005fremove_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fremove_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fremove_005f0_reused);
    }
    return false;
  }
}
